let
    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i45WMjDUByIjAyNDpdhYAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [start_date = _t]),
    ChangeType = Table.TransformColumnTypes(Source,{{"start_date", type date}}),
    AddedEndDate = Table.AddColumn(ChangeType, "end_date", each Date.AddMonths(Date.From(DateTime.LocalNow()),1)),
    GenerateNumbers = Table.AddColumn(AddedEndDate, "Dates", each {Number.From([start_date])..Number.From([end_date])}),
    ExpandDates = Table.ExpandListColumn(GenerateNumbers, "Dates"),
    ChangeColType2 = Table.TransformColumnTypes(ExpandDates,{{"Dates", type date}}),
    RenamedColumns = Table.RenameColumns(ChangeColType2,{{"Dates", "date"}}),
    InsertYear = Table.AddColumn(RenamedColumns, "Year", each Date.Year([date])),
    InsertYearNumber = Table.AddColumn(RenamedColumns,"YearNumber",each Date.Year([date])),
	InsertQuarter = Table.AddColumn(InsertYear,"QuarterOfYear",each Date.QuarterOfYear([date])),
	InsertMonth = Table.AddColumn(InsertQuarter,"MonthOfYear",each Date.Month([date]), type text),
    InsertDay = Table.AddColumn(InsertMonth,"DayOfYear",each Date.Day([date])),
    FinalChangeTypes = Table.TransformColumnTypes(InsertDay,{{"QuarterOfYear", Int64.Type}, {"MonthOfYear", Int64.Type}, {"DayOfYear", Int64.Type}})
in
    FinalChangeTypes